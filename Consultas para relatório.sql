--SAIDAS INV DO STAGE
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW SAIDAS_INV_PSG AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%SA_INV%' AND TABLE_NAME NOT LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
--SAIDAS INV DO STAGE RUIM
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW SAIDAS_INV_PSG_RUIM AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%SA_INV%' AND TABLE_NAME LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELEC, REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
--SAIDAS MOR DO STAGE
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW SAIDAS_MOR_PSG AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%SA_MOR%' AND TABLE_NAME NOT LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
--SAIDAS MOR DO STAGE RUIM
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW SAIDAS_MOR_PSG_RUIM AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%SA_MOR%' AND TABLE_NAME  LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT  REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''SA'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, MOT_SAIDA, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;

--ATIVOS_INV DO STAGE
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW ATIVOS_INV_PSG AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%AT_INV%' AND TABLE_NAME NOT LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP,  COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
--ATIVOS MOR DO STAGE
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW ATIVOS_MOR_PSG AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'STAGE' AND TABLE_NAME LIKE 'PSG%' AND TABLE_NAME LIKE '%AT_MOR%' AND TABLE_NAME NOT LIKE '%RUIM') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP,  COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, COBERTURA, COUNT(*) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP,  COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
--UNINDO AS DUAS VIEWS
SELECT * FROM SAIDAS_INV_PSG
UNION ALL
SELECT * FROM SAIDAS_MOR_PSG

SELECT * FROM ATIVOS_INV_PSG
UNION ALL
SELECT * FROM ATIVOS_MOR_PSG

SELECT * FROM SAIDAS_INV_PSG_RUIM
UNION ALL
SELECT * FROM SAIDAS_MOR_PSG_RUIM


SELECT COUNT(*) AS QTDE, T3.REF_INFO, T3.COD_EMP, T3.MOT_SAIDA, T3.COBERTURA
FROM (--Verifica se o indivíduo que saiu também estava na entrada da mor 
    SELECT T1.CPF AS CPF,
           T1.DATA_NASC AS DATA_NASC,
           T1.REF_INFO AS REF_INFO,
           T1.SEXO AS SEXO,
           T1.COD_EMP AS COD_EMP,
           T1.MOT_SAIDA AS MOT_SAIDA,
           T1.COBERTURA AS COBERTURA
    FROM SAIDAS_MOR_PSG_REG T1
    INNER JOIN ATIVOS_MOR_PSG_REG T2
    ON T1.CPF = T2.CPF
    --Selecionando só as saídas referentes a invalidez
    WHERE T1.MOT_SAIDA IN (400, 500, 600, 700)
    GROUP BY T1.CPF, T1.DATA_NASC, T1.REF_INFO, T1.SEXO, T1.COD_EMP, T1.MOT_SAIDA, T1.COBERTURA
) T3
--Conferindo os individuos selecionados com os que estão na sa_inv
LEFT JOIN SAIDAS_INV_PSG_REG T4
ON T3.CPF = T4.CPF
AND T3.SEXO = T4.SEXO
AND T3.DATA_NASC = T4.DATA_NASC
AND T3.REF_INFO = T4.REF_INFO
--Verificando se o indivíduo nem foi inserido na sa_inv ou se foi, mas com mot_saida diferente
WHERE T4.CPF IS NULL OR T4.SEXO IS NULL OR T4.DATA_NASC IS NULL OR T4.REF_INFO IS NULL OR T4.MOT_SAIDA NOT IN  (400, 500, 600, 700)
GROUP BY T3.REF_INFO, T3.COD_EMP, T3.MOT_SAIDA, T3.COBERTURA;


--consultas com base no usuário do rodrigo

-- SAIDAS MOR E INV
SELECT REF_INFO, COD_EMP,  COBERTURA, MOT_SAIDA, COUNT(*) AS QTDE, COUNT(DISTINCT CPF) AS QTDE_C_REPET, 'INV' AS SEGMENTO
FROM RODRIGO.SG_SA_INV_20240504_200834
WHERE LINHA_VALIDA = 1 AND EMP ='PSG'
GROUP BY REF_INFO, COD_EMP,  COBERTURA, MOT_SAIDA

UNION ALL

SELECT REF_INFO, COD_EMP,  COBERTURA, MOT_SAIDA, COUNT(*) AS QTDE, COUNT(DISTINCT CPF) AS QTDE_C_REPET, 'MOR' AS SEGMENTO
FROM RODRIGO.SG_SA_MOR_20240507_110221
WHERE LINHA_VALIDA = 1 AND EMP ='PSG'
GROUP BY REF_INFO, COD_EMP,  COBERTURA, MOT_SAIDA

--ENTRADAS INV 
DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW ATIVOS_INV_PSG_ROD AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'RODRIGO' AND TABLE_NAME LIKE '%AT_INV%' AND TABLE_NAME NOT LIKE '%ERR%') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, COBERTURA, SUM(REPETICOES) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, COBERTURA, COUNT(REPETICOES) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''INV'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;

DECLARE
    v_sql VARCHAR2(4000) := 'CREATE OR REPLACE VIEW ATIVOS_MOR_PSG_ROD AS ';
    first_table BOOLEAN := TRUE;
BEGIN
    
    FOR r IN (SELECT table_name FROM all_tables WHERE OWNER= 'RODRIGO' AND TABLE_NAME LIKE '%AT_MOR%' AND TABLE_NAME NOT LIKE '%ERR%') LOOP
        IF first_table THEN
            v_sql := v_sql || 'SELECT REF_INFO, COD_EMP, COBERTURA, SUM(REPETICOES) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
            first_table := FALSE;
        ELSE
            v_sql := v_sql || ' UNION ALL SELECT REF_INFO, COD_EMP, COBERTURA, COUNT(REPETICOES) AS QTDE_C_REPET, COUNT(DISTINCT CPF) AS QTDE, ''MOR'' AS SEGMENTO, ''AT'' AS TABELA FROM STAGE.' || r.table_name || '  GROUP BY REF_INFO, COD_EMP, COBERTURA';
        END IF;
    END LOOP;
   
    EXECUTE IMMEDIATE v_sql;
END;
